DELIMITER //
CREATE PROCEDURE syncing_balance_sheet()
BEGIN
	insert into fundamentals.balance_sheet
	(	
        cik,
        calendarYear,
        period,
        cashAndCashEquivalents, 
        shortTermInvestments, 
        cashAndShortTermInvestments, 
        netReceivables, 
        inventory, 
        otherCurrentAssets, 
        totalCurrentAssets, 
        propertyPlantEquipmentNet, 
        goodwill, 
        intangibleAssets, 
        goodwillAndIntangibleAssets, 
        longTermInvestments, 
        taxAssets, 
        otherNonCurrentAssets, 
        totalNonCurrentAssets, 
        otherAssets, 
        totalAssets, 
        accountPayables, 
        shortTermDebt, 
        taxPayables, 
        deferredRevenue, 
        otherCurrentLiabilities, 
        totalCurrentLiabilities, 
        longTermDebt, 
        deferredRevenueNonCurrent, 
        deferredTaxLiabilitiesNonCurrent, 
        otherNonCurrentLiabilities, 
        totalNonCurrentLiabilities, 
        otherLiabilities, 
        capitalLeaseObligations, 
        totalLiabilities, 
        preferredStock, 
        commonStock, 
        retainedEarnings, 
        accumulatedOtherComprehensiveIncomeLoss, 
        othertotalStockholdersEquity, 
        totalStockholdersEquity, 
        totalEquity, 
        totalLiabilitiesAndStockholdersEquity, 
        minorityInterest, 
        totalLiabilitiesAndTotalEquity, 
        totalInvestments, 
        totalDebt, 
        netDebt
		)
	select 
        staging.cik,
        staging.calendarYear,
        staging.period,
        staging.cashAndCashEquivalents, 
        staging.shortTermInvestments, 
        staging.cashAndShortTermInvestments, 
        staging.netReceivables, 
        staging.inventory, 
        staging.otherCurrentAssets, 
        staging.totalCurrentAssets, 
        staging.propertyPlantEquipmentNet, 
        staging.goodwill, 
        staging.intangibleAssets, 
        staging.goodwillAndIntangibleAssets, 
        staging.longTermInvestments, 
        staging.taxAssets, 
        staging.otherNonCurrentAssets, 
        staging.totalNonCurrentAssets, 
        staging.otherAssets, 
        staging.totalAssets, 
        staging.accountPayables, 
        staging.shortTermDebt, 
        staging.taxPayables, 
        staging.deferredRevenue, 
        staging.otherCurrentLiabilities, 
        staging.totalCurrentLiabilities, 
        staging.longTermDebt, 
        staging.deferredRevenueNonCurrent, 
        staging.deferredTaxLiabilitiesNonCurrent, 
        staging.otherNonCurrentLiabilities, 
        staging.totalNonCurrentLiabilities, 
        staging.otherLiabilities, 
        staging.capitalLeaseObligations, 
        staging.totalLiabilities, 
        staging.preferredStock, 
        staging.commonStock, 
        staging.retainedEarnings, 
        staging.accumulatedOtherComprehensiveIncomeLoss, 
        staging.othertotalStockholdersEquity, 
        staging.totalStockholdersEquity, 
        staging.totalEquity, 
        staging.totalLiabilitiesAndStockholdersEquity, 
        staging.minorityInterest, 
        staging.totalLiabilitiesAndTotalEquity, 
        staging.totalInvestments, 
        staging.totalDebt, 
        staging.netDebt
	from fundamentals_staging.balancesheet_staging staging
	left join 
	(
	select ID, cik, calendarYear, period from fundamentals.balance_sheet
	) formal
	on (staging.cik = formal.cik and staging.calendarYear = formal.calendarYear and staging.period = formal.period)
	where formal.id is null;
END// 
DELIMITER ; # change the delimiter back again.